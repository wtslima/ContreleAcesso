@*@model System.Collections.Generic.IList<CONTROLE_DE_ACESSO_WEB.Models.Sistemas.SistemasModel>*@
@model PagedList.IPagedList<CONTROLE_DE_ACESSO_WEB.Models.Sistemas.SistemasModel>

@Scripts.Render("~/listar")
@if (Model != null && Model.Any())
{
 <!--linha#3-->
    <div class="row">
        <div class="col-xs-12">
            <div class="panel panel-default">
                <!-- tabela responsiva -->
                <div class="panel-heading">
                    <span class="panel-title">
                        <strong>Sistemas encontrados</strong> <span class="badge">@Model.Count</span>
                    </span>
                </div>
                <div class="panel-body">
                    <a class="btn btn-default btn-sm" role="button" id="btn_novo">
                        <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Novo
                    </a>
                </div><!--/.panel-body-->
                <div class="table-responsive">

                    <table id="tabelaSistemas" class="table table-striped table-valign-middle">
                        <tr>
                            <th>Ação</th>
                            <th>Sigla</th>
                            <th>Descrição</th>
                        </tr>

                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="text-nowrap valign-middle">
                                    <a class="btn btn-success btn-sm" role="button" id="btn_editar_@item.Id">
                                        <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span><span class="sr-only">Editar</span>
                                    </a>
                                    <a class="btn btn-danger btn-sm" role="button" id="btn_excluir_@item.Id">
                                        <span class="glyphicon glyphicon-remove" aria-hidden="true"></span><span class="sr-only">Excluir</span>
                                    </a>
                                </td>
                                <td class="text-left" id="codSistema_@item.Id" value="@item.CodSistema">
                                    @item.CodSistema
                                    <input type="hidden" name="Id" id="Id_@item.Id" value="@item.Id">
                                </td>
                                <td class="text-left" id="descSistema_@item.Id" value="@item.DescSistema">@item.DescSistema</td>
                            </tr>
                        }

                    </table>
                </div>
            </div><!--/.panel-->
        </div><!--/.col-->
    </div><!--/row#3-->
    <!-- /tabela responsiva -->
    if (Model.PageCount >= 2)
     {
         <!-- PAGINAÇÃO -->
         <div class="text-center">
             <nav>
                 <ul class="pagination">
                     <li>
                         @if (Model.HasPreviousPage)
                         {

                             @Html.ActionLink("<<", "Index", new {@class="Previous", pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                             @Html.Raw(" ");
                             @Html.ActionLink("< Anterior", "Index", new { pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })

                         }
                         else
                         {

                             @:<<
                             @Html.Raw(" ");

                         }
                     </li>
                         @for (int c = Model.PageNumber; c <= Model.PageCount; c++)
                         {
                             if (c == Model.PageNumber)
                             {
                                <li><a class="active" href="#">@c.ToString()</a></li>
                             }
                             else
                             {
                                <li>@Html.ActionLink(c.ToString(), "Index", new { pagina = c.ToString(), sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })</li>
                             }
                         }
                     
                     
                         @*@if (Model.HasNextPage)
                         {
                            @Html.ActionLink("Próxima >", "Index", "Sistemas", new { pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                            @Html.Raw(" ")
                             ;
                            @Html.ActionLink(">>", "Index", "Sistemas", new { pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter })
                         }
                         else
                         {
                            @:Próxima >
                            @Html.Raw(" ")
                            @:>>
                         }*@
                     
                 </ul>
             </nav>
         </div>
     }
    @*<div>
    @for (int c = Model.PageCount; c <= Model.PageNumber; c++)
    {
        if (Model.HasPreviousPage)
        {
            <li><a class="active" href="#">@Html.Raw(" ");</a></li>
        }
        else
        {
            <li><a href="@Html.ActionLink("<<", "Index", "Sistemas", new {pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})"</a></li>
        }
    }*@

        @*Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @if (Model.HasPreviousPage)
        {
            @Html.ActionLink("<<", "Index", "Sistemas", new {pagina = 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
            @Html.Raw(" ")
            ;
            @Html.ActionLink("< Anterior", "Index", "Sistemas", new {pagina = Model.PageNumber - 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
        }
        else
        {
            @:<<
            @Html.Raw(" ")
            ;
            @:< Anterior
        }

        @if (Model.HasNextPage)
        {
            @Html.ActionLink("Próxima >", "Index", "Sistemas", new {pagina = Model.PageNumber + 1, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
            @Html.Raw(" ")
            ;
            @Html.ActionLink(">>", "Index", "Sistemas", new {pagina = Model.PageCount, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter})
        }
        else
        {
            @:Próxima >
            @Html.Raw(" ")
            @:>>
        }

    </div>*@

<!--/PAGINAÇÃO-->
     
}
else if (Model != null)
{
<!-- alertas -->
    <div class="panel panel-default">
        <div class="panel-body">
            <a class="btn btn-default btn-sm" role="button" id="btn_novo">
                <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>Novo
            </a>
        </div>
        <div class="alert alert-warning alert-dismissible" role="alert" id="alert">
            <strong>Aviso!</strong> Nenhum registro encontrado.
        </div>
    </div>
<!-- /alertas -->
}
